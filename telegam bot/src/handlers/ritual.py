from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery, chat
from aiogram.fsm.context import FSMContext
from aiogram.filters import Text, Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import F
from aiogram.filters.callback_data import CallbackData
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery, CallbackGame, chat
from typing import Optional
import re
from random import choice
from aiogram.utils.keyboard import InlineKeyboardBuilder
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, timedelta
from aiogram import Router

from src.bot import bot
from src.config import Config
from keyboards import usersMenu
from keyboards.inline_keyboards import unyversal_uny, verstka_uny, verstka_uny1, yes_no_dec, get_yes_no_dec
from utils.out_fin import live_priverka, dis_priverka
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from states.user import UserStates

router = Router()

async def ritual1(msg,id_us, dis):
	charge_geo, power = await Config.db.up_charge_rit(id_us, dis)
	if charge_geo == -1:
		await bot.send_message(chat_id=Config.chatMG_id,
							   text=f'–í {dis} –∏—Å—á–µ—Ä–ø–∞–ª–∏ –∑–∞—Ä—è–¥—ã –¥–æ –º–∏–Ω—É—Å–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è')
	if charge_geo == -10:
		await bot.send_message(chat_id=Config.chatMG_id,
							   text=f'–í {dis} –∏—Å—á–µ—Ä–ø–∞–ª–∏ –∑–∞—Ä—è–¥—ã –¥–æ –º–∏–Ω—É—Å 10')
		await msg.answer(
			f'–ú–∞–≥–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è –≤ —Ä–∞–π–æ–Ω–µ –∏—Å—Ç–æ—â–µ–Ω–∞, —Ä–∏—Ç—É–∞–ª –ø–µ—Ä–µ—Å—Ç–∞–ª —Å–æ–±–∏—Ä–∞—Ç—å –º–∞–≥–∏—á–µ—Å–∫—É—é —ç–Ω–µ—Ä–≥–∏—é')
	'''try:
		
	except:
		await msg.answer(
			f'–ú–∞–≥–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è –≤ —Ä–∞–π–æ–Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å—Ç–æ—â–µ–Ω–∞. –ü–æ—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å —Ä–∏—Ç—É–∞–ª')
		return'''
	try:
		await msg.edit_text(f'–¢–≤–æ—Ä–µ–Ω–∏–µ –æ–±—Ä–µ—Ç–∞–µ—Ç —Å–∏–ª—É! –¢–µ–∫—É—â–∞—è —Å–∏–ª–∞ —Ä–∏—Ç—É–∞–ª–∞: {power}', reply_markup=verstka_uny(col=['–ó–∞–∫–æ–Ω—á–∏—Ç—å'], v='ritual'))
	except:
		await msg.answer('–ú–∞–≥–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è –≤ —Ä–∞–π–æ–Ω–µ –∏—Å—Ç–æ—â–µ–Ω–∞, —Ä–∏—Ç—É–∞–ª –ø–µ—Ä–µ—Å—Ç–∞–ª —Å–æ–±–∏—Ä–∞—Ç—å –º–∞–≥–∏—á–µ—Å–∫—É—é —ç–Ω–µ—Ä–≥–∏—é')



@router.message(Text(text=['–†–∏—Ç—É–∞–ª']))
async def ritual0(message: Message, state: FSMContext):
	await state.set_state(UserStates.purpose)
	m = await message.answer('–í–≤–µ–¥–∏ —Ü–µ–ª—å —Ä–∏—Ç—É–∞–ª–∞', reply_markup=verstka_uny(col=['–û—Ç–º–µ–Ω–∏—Ç—å']))
	await state.update_data(m0=m.message_id)

@router.message(UserStates.purpose)
async def ritual3(message: Message, state: FSMContext):
	await state.update_data(pur=message.text)
	await state.set_state(UserStates.resources)
	m = await message.answer('–ö–∞–∫–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ –ø—Ä–æ—á–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –≤ —Ä–∏—Ç—É–∞–ª–µ? '
						 '–¢–∞–∫–∂–µ —É–∫–∞–∂–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–∏—Ç—É–∞–ª–∞, –µ—Å–ª–∏ –≤—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –≥—Ä—É–ø–ø–æ–≤–æ–π —Ä–∏—Ç—É–∞–ª.\n'
						 '–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —É —Ç–µ–±—è –≤–∫–ª—é—á–µ–Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏.', reply_markup = verstka_uny(['–û—Ç–º–µ–Ω–∏—Ç—å']))

	await state.update_data(m1=m.message_id)

@router.message(UserStates.resources)
async def ritual4(message: Message, state: FSMContext, apscheduler: AsyncIOScheduler):
	res = message.text
	if res:
		if await live_priverka(message.from_user.id):
			dis = await dis_priverka(message.from_user.id)
			if dis:
				await state.update_data(res=res, dis=dis)
				await state.set_state(UserStates.zag)
				id_j = str(message.from_user.id) + 'coll'
				msg = await message.answer(f'–ù–∞—á–∏–Ω–∞–π —Ç–≤–æ—Ä–∏—Ç—å! –¢–µ–∫—É—â–∞—è —Å–∏–ª–∞ —Ä–∏—Ç—É–∞–ª–∞:0', reply_markup=verstka_uny(col=['–ó–∞–∫–æ–Ω—á–∏—Ç—å'], v='ritual'))
				name = await Config.db.get_name(message.from_user.id)
				df = await state.get_data()
				await bot.delete_message(chat_id=message.from_user.id, message_id=df['m0'])
				await bot.delete_message(chat_id=message.from_user.id, message_id=df['m1'])
				await bot.send_message(chat_id=Config.chatMG_id ,text=f"–ü–µ—Ä—Å–æ–Ω–∞–∂ {name} –Ω–∞—á–∞–ª —Ä–∏—Ç—É–∞–ª\n"
																	  f"–ú–µ—Å—Ç–æ —Ä–∏—Ç—É–∞–ª–∞: {dis}.\n"
									   f"–¶–µ–ª—å —Ä–∏—Ç—É–∞–ª–∞: {df['pur']}\n"
									   f"–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∏ –ø—Ä–æ—á–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: {res}")
				try:
					apscheduler.add_job(ritual1, id=id_j, trigger='interval', minutes=1, replace_existing=True,
										coalesce=True, misfire_grace_time=10801,
										kwargs={'msg': msg, "id_us": message.from_user.id, "dis": dis})
				except:
					apscheduler.remove_job(id_j)
					apscheduler.add_job(ritual1, id=id_j, trigger='interval', minutes=1, replace_existing=True,
										coalesce=True, misfire_grace_time=10801,
										kwargs={'msg': msg, "id_us": message.from_user.id, "dis": dis})


# noinspection PyUnresolvedReferences
@router.callback_query(unyversal_uny.filter(F.v=='ritual'))
async def ritual2(query: CallbackQuery, apscheduler: AsyncIOScheduler, state: FSMContext):
	id_j = str(query.from_user.id) + 'coll'
	apscheduler.remove_job(id_j)
	tgid = query.from_user.id
	power = await Config.db.get_one(tgid, 'power')
	name = await Config.db.get_name(tgid)
	msg0 = await query.message.edit_text(f'–†–∏—Ç—É–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω, –æ–∂–∏–¥–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç –º–∏—Ä–æ–∑–¥–∞–Ω–∏—è')
	df = await state.get_data()
	msg = await bot.send_message(chat_id= Config.chatMG_id, text=f"–ü–µ—Ä—Å–æ–Ω–∞–∂ {name} –∑–∞–∫–æ–Ω—á–∏–ª —Ä–∏—Ç—É–∞–ª\n"
																 f"–ú–µ—Å—Ç–æ —Ä–∏—Ç—É–∞–ª–∞: {df['dis']}\n"
											 f"–¶–µ–ª—å —Ä–∏—Ç—É–∞–ª–∞: {df['pur']}\n"
											 f"–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∏—Ç—É–∞–ª–∞: {df['res']}\n"
											 f"–ò—Ç–æ–≥–æ–≤–∞—è —Å–∏–ª–∞ —Ä–∏—Ç—É–∞–ª–∞: {power}\nüî¥"
                                             f"<b>–ù–ï–ó–ê–ö–†–´–¢–ê–Ø –ó–ê–Ø–í–ö–ê</b>\n"
                                             f"–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∏—Ç—É–∞–ª–∞ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")
	await Config.db.save_msg(msg.message_id, tgid, msg.text, msg0.message_id)
	await Config.db.null_power(tgid)
	await state.clear()


